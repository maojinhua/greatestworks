# =============================================================================
# Docker 环境配置文件
# 用于 Docker Compose 部署
# =============================================================================

# 应用基础配置
app:
  name: "GreatestWorks MMO Server (Docker)"
  version: "1.0.0"
  environment: "docker"
  debug: false
  
# 服务器配置
server:
  http:
    host: "0.0.0.0"
    port: 8080
    read_timeout: "30s"
    write_timeout: "30s"
    idle_timeout: "60s"
  
  websocket:
    host: "0.0.0.0"
    port: 8081
    check_origin: false
    
  tcp:
    host: "0.0.0.0"
    port: 8082
    max_connections: 5000
    
  metrics:
    host: "0.0.0.0"
    port: 9090

# 数据库配置（使用 Docker 服务名）
database:
  mongodb:
    uri: "mongodb://mongodb:27017"
    database: "mmo_game"
    username: "admin"
    password: "admin123"
    auth_source: "admin"
    max_pool_size: 50
    min_pool_size: 5
    
  redis:
    addr: "redis:6379"
    password: "redis123"
    db: 0
    pool_size: 50
    min_idle_conns: 5

# 消息队列配置
messaging:
  nats:
    url: "nats://nats:4222"
    cluster_id: "mmo-cluster"
    client_id: "mmo-server-docker-1"

# 安全配置
security:
  jwt:
    secret: "docker-jwt-secret-change-in-production"
    access_token_ttl: "1h"
    refresh_token_ttl: "24h"
    
  cors:
    allowed_origins:
      - "http://localhost:3000"
      - "http://localhost:8080"
    allow_credentials: true

# 日志配置
logging:
  level: "info"
  format: "json"
  output: "stdout"
  
  fields:
    service: "mmo-server-docker"
    version: "1.0.0"
    container: "true"

# 游戏配置
game:
  player:
    max_level: 100
    initial_gold: 1000
    initial_experience: 0
    
  battle:
    max_battle_time: "5m"
    
  chat:
    rate_limit: 20

# 性能配置
performance:
  worker_pool:
    size: 50
    queue_size: 500
    
  cache:
    default_ttl: "30m"
    max_entries: 5000
    
  rate_limit:
    enabled: true
    requests_per_minute: 500
    burst: 50

# 监控配置
monitoring:
  health:
    enabled: true
    
  metrics: # deprecated legacy settings
    enabled: false

  tracing:
    enabled: false
    
  profiling:
    enabled: true
    host: "0.0.0.0"
    port: 6060

# 开发工具配置（Docker 环境禁用）
development:
  hot_reload:
    enabled: false
    
  debug:
    pprof_enabled: false
    race_detector: false
    
  test_data:
    enabled: false